Build1=Default,ch.waut
File1=20160813_151619_ii.jpg
File10=Main.bal
File11=sqlite3
File2=busybox
File3=cb.sh
File4=cb_init.sh
File5=cb_io.sh
File6=cb_networking.sh
File7=cb_runhaveged
File8=cb_weekly.sh
File9=haveged
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=clocks
Library3=b4arootcmd
Library4=mlfiles
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~AddPermission("android.permission.ACCESS_SUPERUSER")~\n~RemovePermission("android.permission.WAKE_LOCK")~\n~RemovePermission("android.permission.WRITE_EXTERNAL_STORAGE")~\n~RemovePermission("android.permission.READ_EXTERNAL_STORAGE")~\n~
Module1=wautch_service
Module2=Schedule
NumberOfFiles=11
NumberOfLibraries=4
NumberOfModules=2
Version=8.3
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: waut.ch!
	#VersionCode: 110
	#VersionName: eaf169a6-c16e-4d37-9d92-650fc89b21df
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.	
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

	Dim Aclock As AnalogClock	

	Dim rc_main As RootCmd

'	Dim fs_main As MLfiles
	
	Private Panel1 As Panel
	
	Private Label1 As Label
	Private Button2 As Button
	Private CheckBox1 As CheckBox
	Private Button1 As Button

	Dim time_I, time_II, time_III, time_IV As Long

End Sub

Sub random12() As Int
	If(Rnd(1,64) <= 32 ) Then
		Return 2
	Else
		Return 1
	End If
End Sub

Sub random13() As Int

	If(Rnd(1,64) > 0 ) And (Rnd(1,64) <= 18 )  Then
		Return 2
	End If
	
	If(Rnd(1,64) > 18 ) And (Rnd(1,64) <= 36 )  Then
		Return 3
	End If
	
	If(Rnd(1,64) > 36 ) And (Rnd(1,64) <= 64 )  Then
		Return 1
	End If
		
End Sub

Sub SetRandom_Local()
	
'Put throw
'Put choose

	Dim i,j As Int
	Dim random As Long

	For j = 1 To 64

		For i = 1 To 64
			If(Rnd(1,64) > 30 ) Then
				random = Rnd(1,1+Rnd(1,922337203685477))
				random = Rnd(1+random12,9-random12)
				random = Rnd(1+random12,9-random12)
				random = random13
			End If
		Next

		'				random = random - Rnd(1+random12,9-random12) * Power(Rnd(1+random12,9-random12),i+1-random12)
		For i = 1 To 64
			If(Rnd(1,64) < 30 ) Then
				random = Rnd(1,1+Rnd(1,922337203685477))
				random = Rnd(1+random12,9-random12)
				random = Rnd(1+random12,9-random12)
				random = random13
				Label1.TextSize = 18 - random13

				Label1.Text = Rnd(1,64)
			End If
		Next
		
		Label1.TextSize = 18 - random13
		Label1.Text = Rnd(1,64)

	i = random13
	Label1.Top = Activity.Height / 2
	
	i = random13
	Label1.Left = Activity.Width / 2 - 40
	
	Next

	Label1.TextSize = 18 - random13

	Label1.Text = Rnd(1,64)
	
End Sub

Sub Activity_Create(isFirst As Boolean)
	
	'Do not forget to load the layout file created with the visual designer. For example:

	Activity.LoadLayout("Main")
	
	Activity.Title = "waut.ch! running... ? for help, space to clear page"
	
	Aclock.Initialize("Aclock")
'	Activity.AddView(Aclock, 200dip, 110dip, 100dip, 100dip)
	Activity.AddView(Aclock, 0dip, 0dip, 100dip, 100dip)
'	Activity.AddView(Aclock, DipToCurrent(Activity.Height / 2), DipToCurrent(Activity.Width / 2 - 40), 100dip, 100dip)
	
	Aclock.Color = Colors.Transparent
	
	Aclock.Visible = True
	Panel1.SendToBack
	
	Label1.Top = Activity.Height / 2 
	Label1.Left = Activity.Width / 2 - 40

	Label1.BringToFront
	
	rc_main.haveRoot
	
'    fs_main.GetRoot
	
	Label1.TextSize = 18 - random13
	Button2.TextSize = 14

	If rc_main.haveRoot = False Then
'		fs_main.GetRoot
		ToastMessageShow("root not found...",True)
	End If
		
	SetRandom_Local

	SetRandom_Local

	StartServiceAt(wautch_service,DateTime.Now, True)
	
	StartServiceAt(Schedule,DateTime.Now + 1 * 1000, True)
	
	time_I = DateTime.Now
	time_II = 0
	time_III = DateTime.Now
	time_IV = 0 
	
'    If ( isFirst = True ) Then 
'#IF NOT(MAINTENANCE)
'		ToastMessageShow("please reboot whenever possible...",True)
'#ELSE
'		ToastMessageShow("may reboot automatically! please connect charger...",True)
'#END IF	  
'	End If
		
End Sub

Sub StartService_Local()
'	StartServiceAt(wautch_service,(DateTime.GetDayOfYear+1)*DateTime.TicksPerDay)	
End Sub

Sub Activity_Pause(UserClosed As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:

	SetRandom_Local

	ToastMessageShow( Rnd(1,64) , True )
	Activity.Finish
	
'	If ( UserClosed = True ) Then
'		Activity.Finish
''	Else
''		ToastMessageShow("close",False)
'	End If

'	SetRandom_Local

'	Label1.TextSize = 18 - random13	
End Sub

Sub Activity_Resume()
	'Do not forget to load the layout file created with the visual designer. For example:
	SetRandom_Local
	Label1.TextSize = 18 - random13
	SetRandom_Local
	
'	ToastMessageShow("turn",False)
End Sub

Sub Aclock_Click
	SetRandom_Local
	ToastMessageShow( DateTime.Time(DateTime.Now), False )
	SetRandom_Local	
End Sub

Sub Button2_Click
	
	Button2.Enabled = False

	time_I = DateTime.Now
	
	SetRandom_Local
				
	If ( time_I > ( time_II + 1500 ) ) Then
		ToastMessageShow( "utility for background calibration, curation and tuning of the device towards an intuitive interface. subsystems being battery, entropy, encryption, disk, cpu, memory, filesystem, ui, scheduler, and network, all safe and open source technology. presented in this gaming metric format with infinite feedback and an interestingly assymetric chance. scribble anywhere, check in some stress, or find the 8!", True )
		time_II = DateTime.Now
	End If
	
	SetRandom_Local
		
	Button2.Enabled = True
		
End Sub

Sub Label1_Click
	Dim dummy As Boolean
	SetRandom_Local
	ToastMessageShow( Rnd(1,64), True )
	SetRandom_Local
End Sub

Sub Panel1_Click
	SetRandom_Local
End Sub

Sub CheckBox1_CheckedChange(Checked As Boolean)
	
'	ToastMessageShow(Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9), True )
	SetRandom_Local
'	ToastMessageShow("check",False)
	CheckBox1.Enabled = False
	CheckBox1.Visible = False
	
    CheckBox1.Checked = False
	
	Aclock.Visible = False
	Button2.Visible = False
	
'	CheckBox1.Visible = True
	CheckBox1.Enabled = True
	
	Button1.Visible = True
	Button1.BringToFront
	CheckBox1.SendToBack
	Activity.Title = "waut.ch! running... ! to redraw elements"
	SetRandom_Local
	
End Sub

Sub S2()
	Sleep(30)
End Sub

Sub Panel1_Touch (Action As Int, X As Float, Y As Float)
	
	Dim random_long As Long

	Dim i,j,k As Int

'	time_III = DateTime.Now
	
	If Aclock.Visible = False Then

		time_IV = DateTime.Now
		
'		If ( time_III > ( time_IV + 1500 ) ) Then
'			ToastMessageShow( DateTime.Date(DateTime.Now) , False )
'			time_IV = DateTime.Now
'			Return 0
'		End If
		
		If ( time_IV > ( time_III + 15000 ) ) Then
			ToastMessageShow( Rnd(1,64) , True )
'			ToastMessageShow( DateTime.Date(DateTime.Now) , False )
'			time_III = DateTime.Now
			Activity.Finish
'			Return 0
		End If
		
		For j = 1 To 64

			For i = 1 To 64
				random_long = Rnd(1,2+Abs(Action)+(Abs(X)*Abs(Y)))
				If(Rnd(1,64) > 30 ) Then
					random_long = Rnd(1,1+Rnd(1,922337203685477))
					random_long = Rnd(1+random12,9-random12)
					random_long = Rnd(1+random12,9-random12)
					random_long = random13
				End If
			Next

			For i = 1 To 64
				random_long = Rnd(1,2+Abs(Action)+(Abs(X)*Abs(Y)))
				If(Rnd(1,64) < 30 ) Then
					random_long = Rnd(1,1+Rnd(1,922337203685477))
					random_long = Rnd(1+random12,9-random12)
					random_long = Rnd(1+random12,9-random12)
					random_long = random13
				End If
			Next

'			random_long = Rnd(1,Abs(X)+Abs(Y)) + random_long - Rnd(1+random12,9-random12) * Power(Rnd(1+random12,9-random12),i+1-random12)
			
			Label1.TextSize = 18 - random13
			S2
			Sleep(30)
			Label1.Text = Rnd(1,64)
		
		Next

		k = 40 
		
		If Activity.Height > 1000 Then k = 75

		If Activity.Width > 1000 Then k = 75
		 
		i = random13
		j = random13
'		Label1.Top = Activity.Height / 2 + (i-3)*(j-3)*k
'		Label1.Top = Activity.Height / 2 + 2*k - (i+j)*k
		Label1.Top = Activity.Height / 2 + 3*k - (i+j)*k
		
		i = random13
		j = random13
		Label1.Left = Activity.Width / 2 + 3*k - (i+j)*k
		
		Label1.TextSize = 22 - 2*random13

		S2
		Sleep(30)
		Label1.Text = Rnd(1,64)
		
	End If
	
End Sub

Sub Button1_Click
	SetRandom_Local
	'	ToastMessageShow(Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9) & Rnd(0,9), True )
	CheckBox1.Enabled = True
	CheckBox1.Visible = True
	
	CheckBox1.Checked = False
	
	Aclock.Visible = True
	Button2.Visible = True
		
	Button1.Visible = False
	Button1.SendToBack
	CheckBox1.BringToFront
	
	Activity.Title = "waut.ch! running... ? for help, space to clear page"
	SetRandom_Local
	
End Sub